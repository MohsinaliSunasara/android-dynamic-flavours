import groovy.json.JsonSlurper

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.rum.dynamicflavours'
    compileSdk 32

    defaultConfig {
        applicationId "com.rum.dynamicflavours"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        flavorDimensions "project"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
}

def applicationDefinitions = []

def projectsInfoFile = file('projects_info/projects_info.json')
def projectsInfoJSON = new JsonSlurper().parseText(projectsInfoFile.text)
def projectsInfoArray = projectsInfoJSON.projectsInfoJSONArray
def projectsInfoMap = [:]
projectsInfoArray.each { projectInfo ->
    projectsInfoMap[projectInfo.projectVariantName] = projectInfo

    applicationDefinitions.add(['name': projectInfo.projectVariantName, 'applicationId': projectInfo.applicationId])
}

applicationDefinitions.each { applicationDefinition ->
    def signingConfig = projectsInfoMap[applicationDefinition['name']]
    if (signingConfig.isLive == 1) android.productFlavors.create(applicationDefinition['name'], { flavor ->
        flavor.applicationId = applicationDefinition['applicationId']
        flavor.versionCode = signingConfig.versionCode
        flavor.versionName = signingConfig.versionName
//        setProperty("archivesBaseName", "${applicationDefinition['applicationId']}-v${signingConfig.versionCode}")

        flavor.signingConfig = android.signingConfigs.create(applicationDefinition['name'])
        flavor.signingConfig.storeFile = file(signingConfig.storeFile)
        flavor.signingConfig.storePassword = signingConfig.storePassword
        flavor.signingConfig.keyAlias = signingConfig.keyAlias
        flavor.signingConfig.keyPassword = signingConfig.keyPassword
    }) else println "===> " + signingConfig.projectVariantName + " is Not LIVE. Excluding it from build."
}